#!/sbin/sh

#This file is part of Universal Systemless Installer
#
#    The Universal Systemless Installer scripts are free software: you can redistribute
#    it and/or modify it under the terms of the GNU General Public License as published
#    by the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version, w/Systemless Xposed installable zip exception.
#
#    These scripts are distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

##########################################################################################
# Changelog
##########################################################################################
# v0.1k - revised imgsize
#       - revised unpack method
#       - revised mount script and init.rc
#       -
# v0.1j - revised mount options, removed comma for compatibility busybox,toolbox or toybox
#       - added diskfree check for /tmp
#       - revised paths and librarypaths properly
#       - rollback aapt search
#       - fixed ls/cut/chown problem
#       - 
# v0.1i - removed awk for compatibility whether busybox,toolbox or toybox
#       - fixed search for paths with spaces
#       - revised librarypath
#       - added aapt check, if not found, apkname defaults to filename (omnirom)
#       - removed incorrect 64-bit patch check
#       - revised mount process and cleanup
#       -
# v0.1h - revised imgsize detection, revised imgbuild (reduced by 35%)
#       - added sanity checks throughout the script
#       - boot.img backup to /data or /cache, with md5sum and origin
#       - removed some obsolete loops, added log optimizations
#       - 
# v0.1g - changed imgsize detection, fixed ui_print, some minor bugs and typo's 
# v0.1f - changed abi to abilist detection since sdk21+
# v0.1e - changed bootpartition detection
# v0.1d - fixed some bugs
# v0.1c - added support for custom xposed frameworks and xposed installers
# v0.1b - added auto installation of material-design-xposed-installer
# v0.1a - initial alpha non-public release

##########################################################################################
# Urls/Credits
##########################################################################################
# http://dl-xda.xposed.info/framework 		: rovo89 - xposed framework
# http://download.chainfire.eu/supersu 		: chainfire - systemless idea & tools
# http://topjohnwu.github.io/ 			: topjohnwu - systemless xposed idea
# https://github.com/dvdandroid/XposedInstaller : dvdandroid - xposed-installer
# http://forum.xda-developers.com/xposed/super-alpha-posted-permission-xposed-t3072979 -
# romracer / xposed-installer
# https://ge0n0sis.github.io/posts/2015/12/exploring-androids-selinux-kernel-policy/
##########################################################################################
# Variables
##########################################################################################
OUTFD="/proc/self/fd/$2"
ZIP="$3"
ZIPDIR="${3%/*}"
TMPDIR="/tmp/$RANDOM"
IMGDIR="/xposed"
IMGNAME="xposed.img"
LOG="/tmp/recovery.log"
APP="Universal Systemless Installer for Xposed Framework"
AUT="st0rm"
VER="0.1k"
LIC="GPLv2"

##########################################################################################
# Cleaning up
##########################################################################################
trap '
ui_print " "
ui_print "***********"
ui_print "Cleaning up"
ui_print "***********"

ui_print "- Reverting library path"
PATH=$PATH_ORG
LD_LIBRARY_PATH=$LD_LIBRARY_PATH_ORG

ui_print "- Unmounting"
mountpoint -q $IMGDIR && umount $IMGDIR
mountpoint -q /system && umount /system

losetup -a|while read LD;do losetup -d ${LD%%:*};done

ui_print "- Removing TMPDIR: $TMPDIR"
rm -rf "$TMPDIR"
sync

[ -f $LOG ] && cat $LOG|tail -c+$LOGSIZE > "$ZIP.log"
#[ -f $LOG ] && cp -f $LOG "$ZIP.log"

ui_print " "

exit
' 0 1 2 3 15

LOGSIZE=`wc -c < $LOG`
[ -f "$ZIP.log" ] && rm -f "$ZIP.log"


##########################################################################################
# Functions
##########################################################################################
ui_print(){ printf "ui_print $*\nui_print \n">$OUTFD;}
ui_print_exit(){ ui_print "$*";exit 1;}
grep_prop(){ grep "^$1=" $2|sed "s/^.*=//g";}
set_perm(){ chcon $1 $5 && chmod $2 $5 && chown $3:$4 $5;}

##########################################################################################
# Banner
##########################################################################################
ui_print " "
ui_print "******************************"
ui_print "Universal Systemless Installer"
ui_print "    for Xposed Framework"
ui_print "         ver: $VER"
ui_print " "
ui_print "     written by: $AUT"
ui_print "   Licensed under: $LIC"
ui_print "******************************"
ui_print " "

##########################################################################################
# Mounting
##########################################################################################
ui_print "- Mounting /system(ro), /data, /cache"
mountpoint -q /system || mount -o ro /system \
 || ui_print_exit "! Failed, unable to mount /system"
mountpoint -q /data || mount /data || mountpoint -q /cache || mount /cache \
 || ui_print_exit "!Failed, unable to mount /data or /cache"

##########################################################################################
# Updating paths
##########################################################################################
PATH_ORG=$PATH
PATH=/sbin:/system/bin:/system/xbin

LD_LIBRARY_PATH_ORG=$LD_LIBRARY_PATH
LD_LIBRARY_PATH=.:../lib64:../lib

ui_print "- Updating library path"

##########################################################################################
# Prerequisites
##########################################################################################
find ${PATH//:/ } -type l|sort|while read file;do
  case "${file##*/}" in busybox|toolbox|toybox) ui_print "Found: $file";;esac
  printf "$file -> `readlink $file`\n"
done

#todo: implement toolcheck busybox, toybox and toolbox

BUILD_PROP="/system/build.prop"
[ ! -f $BUILD_PROP ] \
  && ui_print_exit "! Failed: build.prop not found"

ABI=`grep_prop ro.product.cpu.abilist $BUILD_PROP|sed 's/,/\n/g'|head -1`

API=`grep_prop ro.build.version.sdk $BUILD_PROP`

#https://developer.android.com/ndk/guides/abis.html
#translation to rovo89 xposed releases
case $ABI in
 armeabi)       ARCH=arm;;
 armeabi-v7a)		ARCH=arm;;
 arm64-v8a)     ARCH=arm64;;
 x86)           ARCH=$ABI;;
 x86_64)        ARCH=x64;;
 mips)          ARCH=$ABI;;
 mips64)        ARCH=$ABI;;
 *)             ui_print_exit "! Failed: ${ABI:-ABI_EMPTY} is not supported (yet)";;
esac

ui_print "- Cpu architecture: $ABI/$ARCH, sdk$API"

##########################################################################################
# Building Xposed Filesystem Image
##########################################################################################
ui_print " "
ui_print "*************"
ui_print "Image builder"
ui_print "*************"
ui_print "- UnZipping into TMPDIR: $TMPDIR"
mkdir -p "$TMPDIR"
unzip -o "$ZIP" "$ABI/*" "common/*" -d "$TMPDIR"
[ $? -eq 0 ] || ui_print_exit "! Failed: Unable to extract zip file!(0)"

IMG=$TMPDIR/build.img

SEARCH="xposed-v*-sdk${API}-${ARCH}.zip"
VERSION=`find "$ZIPDIR" -type f -iname "$SEARCH" -maxdepth 2|sed 's/^.*xposed-v//'|sort -n|tail -1`
XPOSEDZIP=`find "$ZIPDIR" -type f -iname "xposed-v$VERSION"`

[ -z "$XPOSEDZIP" ] \
 &&  ui_print_exit "! File not found: $SEARCH"

unzip -l "$XPOSEDZIP"
IMGSIZE=`unzip -l "$XPOSEDZIP" "system/*" "$ARCH/system/*" |tail -1|xargs|cut -d' ' -f1`
[ -z $IMGSIZE ] || [ "$IMGSIZE" -eq "0" ] && ui_print_exit "! Failed, no files to extract"

# journal= 1024*blocksize + filesystem 32*blocksize
[ "$IMGSIZE" -lt $((1056*4096)) ] && IMGSIZE=$((1056*4096))

IMGSIZE=$((IMGSIZE+(1*1024*1024))) # added 1mb buffer for inline patching

FREE=`df -k|grep "/tmp"|xargs|cut -d' ' -f4`

NEED=$(((IMGSIZE/1024)+2)) #convert to blocks, 1 for round up, 1 for filesystem entry

[ "$FREE" -le "$NEED" ] \
  && ui_print_exit "! Failed, /tmp has $((FREE/1024))M free, but $((NEED/1024))M is needed"

printf "${IMGDIR}(/.*)? u:object_r:system_file:s0\n">"$TMPDIR/file_contexts_image"
ui_print "- Building new image: $IMG ($((IMGSIZE/1024/1024))M)"

make_ext4fs -l "${IMGSIZE}" -a $IMGDIR -S "$TMPDIR/file_contexts_image" $IMG \
  || ui_print_exit "! Failed, to create $IMG"
tune2fs -O ^has_journal $IMG
chcon u:object_r:system_data_file:s0 $IMG
chmod 600 $IMG

ui_print "- Mounting $IMG to $IMGDIR"

[ ! -d $IMGDIR ] \
  && mkdir -p $IMGDIR

mountpoint -q $IMGDIR \
  && umount $IMGDIR

for n in 0 1 2 3 4 5 6 7;do
  LD=/dev/block/loop$n
  [ -b $LD ] \
    || mknod -m600 $LD b 7 $n \
    || ui_print_exit "! Failed, unable to create loopdevice"
  losetup $LD $IMG \
    || continue
  mount -t ext4 -o loop,rw,noatime $LD $IMGDIR \
    && break
done

mountpoint -q $IMGDIR \
 || ui_print_exit "! Failed: Unable to mount $IMGDIR"

rmdir "$IMGDIR/lost+found"

ui_print "- UnZipping 'xposed-v$VERSION' into $IMGDIR"

unzip -o "$XPOSEDZIP" -d $IMGDIR "system/*"
[ $? -eq 0 ] || ui_print_exit "! Failed: Unable to extract zip file!(1)"

mv -f $IMGDIR/system/* $IMGDIR && rmdir $IMGDIR/system

find $IMGDIR -type d|while read dir ;do chown 0:0 $dir ;chmod 0755 $dir ;done

find $IMGDIR -type f|while read file;do

  case $file in
    /xposed/bin/app_process*)
      mv -f $file ${file%_xposed} && file=${file%_xposed}
      ui_print "- Applying systemless patch to: $file"
      sed -i 's#/system/lib64/libxposed_art.so#/xposed/lib64/libxposed_art.so#g' $file
      sed -i 's#/system/lib/libxposed_art.so#/xposed/lib/libxposed_art.so#g' $file
      sed -i 's#/system/framework/XposedBridge.jar#/xposed/framework/XposedBridge.jar#g' $file
      sed -i 's#/system/xposed.prop#/xposed/xposed.prop#g' $file
      ;;
    /xposed/xposed.prop)
      sed -i "/version/s/$/ (systemless $VER by $AUT)/" $file
      ;;
  esac

  original=/system/${file#$IMGDIR/}
  if [ -f $original ];then

    case `readlink $(which ls)` in
      busybox|toybox) FIELDS="3,4" ;;
      toolbox)        FIELDS="2,3" ;;
    esac

    CHOWN=$(ls -n $original|xargs|cut -d' ' -f$FIELDS|sed 's/ /:/')
    RWX=$(ls -n $original|xargs|cut -d' ' -f1|sed 's/r/4/g;s/w/2/g;s/x/1/g;s/-/0/g')
    CHMOD=$((${RWX:1:1}+${RWX:2:1}+${RWX:3:1}))$((${RWX:4:1}+${RWX:5:1}+${RWX:6:1}))$((${RWX:7:1}+${RWX:8:1}+${RWX:9:1}))
    CHCON=$(ls -Z $original|xargs|cut -d' ' -f2)

  fi

  echo ""
  [ -f $original ] && echo "$original : `ls -n $original`" || echo "No /system counterpart for: $file using defaults"
  [ -f $original ] && echo "$original : `ls -Z $original`"
  chown ${CHOWN:-0:0} $file
  echo "chown ${CHOWN:-0:0} $file"
  chmod ${CHMOD:-644} $file
  echo "chmod $CHMOD $file"
  chcon ${CHCON:-u:object_r:system_file:s0} $file
  echo "chcon ${CHCON:-u:object_r:system_file:s0} $file"
  echo "$file : `ls -n $file`"
  echo "$file : `ls -Z $file`"
  CHOWN=;CHMOD=;CHCON=;

done

umount $IMGDIR

mountpoint -q /data \
  && cp -f $IMG "/data/$IMGNAME" \
  || cp -f $IMG "/cache/$IMGNAME"

##########################################################################################
# Installing XposedInstaller
##########################################################################################
ui_print " "
ui_print "******************"
ui_print "Package installer"
ui_print "******************"

SEARCH="aapt"
AAPT=`find "/system" -type f -iname "$SEARCH" -maxdepth 2|head -1`

SEARCH="*xposed*installer*.apk"
APKFILE=`find "$ZIPDIR" -type f -iname "$SEARCH" -maxdepth 2|head -1`

if [ ! -f "$APKFILE" ]; then
 ui_print "! Skipping install: $APKFILE not found."
else
 APKNAME=`[ -z "$AAPT" ] && $AAPT dump badging "$APKFILE"|grep package|sed "s/^package: name='//;s/' .*$//"`
 [ -z "$APKNAME" ] && APKNAME="xposed-installer" 
 ui_print "- Installing: '${APKFILE##*/}'"
 mountpoint -q /data \
  && APPDIR=/data/app/$APKNAME-1 \
  || APPDIR=/cache/app/$APKNAME-1

 [ -d $APPDIR ] || mkdir -p $APPDIR
 [ -f $APPDIR/base.apk ] || cp -f "$APKFILE" $APPDIR/base.apk
 set_perm u:object_r:apk_data_file:s0 755 1000 1000 $APPDIR
 set_perm u:object_r:apk_data_file:s0 644 1000 1000 $APPDIR/base.apk
fi

##########################################################################################
# Boot image patch
##########################################################################################
ui_print " "
ui_print "******************"
ui_print "Boot image patcher"
ui_print "******************"

BOOTIMG="$TMPDIR/boot.img"
PATCHED_BOOTIMG="$TMPDIR/patched_boot.img"

SUKERNEL=$TMPDIR/$ABI/sukernel
[ -f $SUKERNEL ] && chmod +x $SUKERNEL || ui_print_exit "! SUKERNEL not found"

for p in `find /dev/block -type l|grep -iE 'android_boot|boot|kern-a|kernel|lnx'`;do
 BOOTPARTITION=`readlink $p`;[ -z $BOOTPARTITION ]||break;done
[ -z ${BOOTPARTITION} ] \
  && ui_print_exit "! Failed: Boot partition NOT found." \
  || ui_print "- Found boot partition: $BOOTPARTITION"

ui_print "- Reading boot partition..."
dd bs=4096 if=$BOOTPARTITION of=$BOOTIMG
[ $? == 0 ] \
  && ui_print "> Success" \
  || ui_print_exit "! Failed"

ui_print "- Backing up boot partition"
MD5SUM=`md5sum $BOOTIMG|xargs|cut -d' ' -f1`
mountpoint -q /data \
  && cp -f $BOOTIMG "/data/boot_${BOOTPARTITION##*/}_$MD5SUM.img" \
  || cp -f $BOOTIMG "/cache/boot_${BOOTPARTITION##*/}_$MD5SUM.img"

#Exitcode: 0/error, 1/Android, 2/ChromeOS
$SUKERNEL --bootimg-type $BOOTIMG
case $? in
 1)	IMGTYPE="android";;
#2)	IMGTYPE="chromeos";;
 *)	ui_print_exit "! Failed (type=$IMGTYPE) (exit:[$?])";;
esac

ui_print "- Patching ramdisk"

update='
 init.rc
 init.xposed.rc
 sbin/mount_xposed.sh
 xposed
'
RAMDISKDIR=$TMPDIR/common/ramdisk
RAMDISK=$TMPDIR/ramdisk

$SUKERNEL --bootimg-extract-ramdisk $BOOTIMG $RAMDISK.gz \
 || ui_print_exit "! Failed, unable to extract ramdisk.gz"
$SUKERNEL --ungzip $RAMDISK.gz $RAMDISK \
 || ui_print_exit "! Failed, unable to extract ramdisk"

for item in $update;do
  ui_print "  > $item"
  case $item in
   init.rc)
     $SUKERNEL --cpio-extract $RAMDISK $item $RAMDISKDIR/$item \
      || ui_print_exit "! Failed, unable to extract $item"
     grep -q "/init.xposed.rc" $RAMDISKDIR/$item \
      && ui_print "  ! Skipping: $item already patched" \
      || sed -i "\#import /init.environ.rc#iimport /init.xposed.rc" $RAMDISKDIR/$item \
        || ui_print_exit "! Failed, unable to patch $item"
     $SUKERNEL --cpio-add $RAMDISK $RAMDISK 750 $item $RAMDISKDIR/$item
     ;;
   init.xposed.rc)
     $SUKERNEL --cpio-add $RAMDISK $RAMDISK 750 $item $RAMDISKDIR/$item
     ;;
   sbin/mount_xposed.sh)
     $SUKERNEL --cpio-add $RAMDISK $RAMDISK 700 $item $RAMDISKDIR/$item
     ;;
   xposed)
     $SUKERNEL --cpio-mkdir $RAMDISK $RAMDISK 755 $item
     ;;
   *)
     ui_print_exit "! Failed, unknown item: [$item]"
     ;;
  esac
  [ $? -eq 0 ] || ui_print_exit "! Failed, adding $item"
done

ui_print "- Building new boot image"
$SUKERNEL --gzip $RAMDISK $RAMDISK.gz \
 || ui_print_exit "! Failed, unable to compress: $RAMDISK"
$SUKERNEL --bootimg-replace-ramdisk $BOOTIMG $RAMDISK.gz $PATCHED_BOOTIMG \
 || ui_print_exit "! Failed, unable create: $PATCHED_BOOTIMG"

ui_print "- Syncing data"
sync

ui_print "- Writing boot partition..."
dd bs=4096 if=$PATCHED_BOOTIMG of=$BOOTPARTITION
if [ $? -ne 0 ];then
  dd bs=4096 if=$BOOTIMG of=$BOOTPARTITION
  [ $? -ne 0 ] \
    && ui_print_exit "!Failed to flash, failed to restore" \
    || ui_print_exit "!Failed to flash, restored backup"
else
  ui_print "> Success"
fi

##########################################################################################
exit 0
